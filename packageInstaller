#!/bin/bash

# This script prompts for manual installation of packages from the allPackages list
# it is called from SetupHelper/setup or can be run from the command line
# Packages are installed either from GitHub or from a USB stick
#

source "/data/SetupHelper/CommonResources"
source "/data/SetupHelper/UpdateResources"

echo
echo "This script allows Venus modification packages to be installed"
echo "Previously installed packages are updated automatically, not from this script"
echo "If updating from USB stick, insert it now before proceeding"
echo
while true ; do
    read -p "Select the package source GitHub (g) or USB (u): " response
    case $response in
        [gG]*)
            updateFromUsb=false
            break;;
        [uU]*)
            updateFromUsb=true
            break;;
        *)
            ;;
    esac
done

if $updateFromUsb ; then
    # wait up to 20 seconds for USB stick
    timeoutCount=20
    /bin/echo -n "Waiting for USB media"
    while true ; do
        mediaList=($(ls /media))
        if [ ! -z $mediaList ] ; then
            break;
        elif ((timeoutCount-- == 0)); then
            echo
            echo "no usb media found - exiting"
            exit
        else
            /bin/echo -n "."
            sleep 1
        fi
    done
    echo
fi

# allow reinstallations if auto updates are not enabled
autoUpdateSetting=$(dbus-send --system --print-reply=literal --dest=com.victronenergy.settings /Settings/GuiMods/GitHubAutoUpdate\
                    com.victronenergy.BusItem.GetValue 2> /dev/null | awk '{print $3}')
if [ -z $autoUpdateSetting ] || [ $autoUpdateSetting == 0 ]; then
    reinstallOk=true
else
    reinstallOk=false
fi

rebootNeeded=false
updateSetupHelper=false
for package in $allPackages; do
    doUpdate=false
    packageDir="/data/$package"
    
    # if automatic updates are enabled, skip packages that have alreay been installed
    if [ -e $packageDir ] && [ -f "$setupOptionsRoot/$package/optionsSet" ]; then
        if ! $reinstallOk ; then
            echo "$package has already been installed and will be automatically updated - skipping"
            continue
        fi
        installText="reinstall"
    else
        installText="install"
    fi

    if $updateFromUsb ; then
        for dir in ${mediaList[@]} ; do
            getFromUsb $package
            if [ $? -eq 1 ]; then
                echo
                yesNoPrompt "$installText $package from USB? (y/n): "
                if $yesResponse ; then
                    doUpdate=true
                else
                    echo "#### removing $packageDir"
                    rm -rf "$packageDir-$gitHubBranch"
                fi
                break;
            fi
        done

    # check GitHub
    else
        getFromGitHub $package
        if [ $? -eq 1 ]; then
            echo
            yesNoPrompt "$installText $package from GitHub? (y/n): "
            if $yesResponse ; then
                doUpdate=true
            else
                echo "#### removing $packageDir"
                rm -rf "$packageDir-$gitHubBranch"
            fi
        fi
    fi
    if $doUpdate ; then
        # defer running SetupHelper script
        if [ $package == "SetupHelper" ]; then
            updateSetupHelper=true
        # update the package with user interaction if it is needed to do a full install (not reinstall)
        else
            doUpdate $package 'prompting'
        fi
    fi
done

# if an update was found for SetupHelper, run it's setup script now
# this prevents stepping on SetupHelper resources
# (this script will complete even if it's replaced)
if $updateSetupHelper ; then
    doUpdate "SetupHelper" 'propmting'
fi
if $rebootNeeded ; then
    echo
    yesNoPrompt "Reboot needed to complete installation, do it now? (y/n): "
    if $yesResponse ; then
        echo "rebooting ..."
    else
        echo "You must reboot manually to complete installation"
    fi
fi
