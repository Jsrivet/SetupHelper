#!/bin/bash

# this script sets up the SetupHelper service
# This service provides automatic and manual updates for Venus modificaiton packages
#

#### following lines incorporate SetupHelper utilities into this script
# Refer to the SetupHelper ReadMe file for details.

source "/data/SetupHelper/CommonResources"

#### end of lines to include SetupHelper

#### running manually and OK to proceed - prompt for input
if [ $scriptAction == 'NONE' ] ; then
    # create dbus Settings if they haven't been set previously
    # if one setting exists, assume they are all there
    # NOTE: if new settings are added in the future, change test for that one
    # to avoid creating that new parameter !!!!
    autoUpdateSetting=$(dbus-send --system --print-reply=literal --dest=com.victronenergy.settings /Settings/GuiMods/GitHubAutoUpdate\
            com.victronenergy.BusItem.GetValue 2> /dev/null | awk '{print $3}')
    if [ -z $autoUpdateSetting ]; then
        logMessage "creating SetupHelper Settings"
        dbus -y com.victronenergy.settings /Settings AddSettings\
            '%[{"path": "/GuiMods/GitHubAutoUpdate", "default":0} ]'  > /dev/null
        # move setup option flag to dbus setting
        if [ -f "$setupOptionsDir/autoGitHubUpdate" ]; then
            setSetting 1 /Settings/GuiMods/GitHubAutoUpdate
            rm -f "$setupOptionsDir/autoGitHubUpdate"
        else
            setSetting 0 /Settings/GuiMods/GitHubAutoUpdate
        fi
        
    fi

    # display innitial message
    echo
    echo "This package provides support functions and utilities for Venus modificaiton packages"
    echo "Packages are automatically reinstalled following a Venus OS update"
    echo "Packages may also be automatically updated from GitHub"
    echo "  or a USB stick"
    echo "Prevouslly uninstalled packages can also be installed and configured"
    echo "  as an option from the menu either from GitHub or from a USB stick"
    echo
    echo "If internet access is not available, you can manually update/install from a USB stick"
    echo "Note: installing from a USB stick disables automatic GitHub updates"
    echo

    if [ -f "$setupOptionsDir/optionsSet" ]; then
        enableReinstall=true
    else
        enableReinstall=false
    fi

    response=''
    fullPrompt=true
    while true; do
        if $fullPrompt ; then
            echo
            echo "Available actions:"
            echo "  Install and activate (i)"
            if $enableReinstall ; then
                echo "  Reinstall (r) based on options provided at last install"
            fi
            echo "  Uninstall (u) and restores all files to stock"
            echo "  Quit (q) without further action"
            echo "  Display setup log (s) outputs the last 100 lines of the log"
            echo
            echo "  Enable/disable automatic GitHub package updates (g)"
            echo "  Manually install packages from GitHub or USB stick (p)"
            echo
            fullPrompt=false
        fi
        /bin/echo -n "Choose an action from the list above: "
        read response
        case $response in
            [iI]*)
                scriptAction='INSTALL'
                break;;
            [rR]*)
                if $enableReinstall ; then
                    scriptAction='INSTALL'
                    break
                fi
                ;;
            [uU]*)
                scriptAction='UNINSTALL'
                break
                ;;
            [qQ]*)
                exit
                ;;
            [sS]*)
                displayLog $setupLogFile
                ;;
            [gG]*)
                autoUpdate=$(dbus-send --system --print-reply=literal --dest=com.victronenergy.settings\
                        /Settings/GuiMods/GitHubAutoUpdate\
                        com.victronenergy.BusItem.GetValue 2> /dev/null | awk '{print $3}')
                if [ $autoUpdate == '1' ] ; then
                    echo "Automatic GitHub updates are currently ENABLED"
                else
                    echo "Automatic GitHub updates are currently disabled"
                fi
                read -p "Enable (e) / Disable (d) / no change(cr)?: " response
                if [ ! -z $response ]; then
                    if [ $response == 'e' ] || [ $response == 'E' ]; then
                        logMessage "enabling automatic GitHub package updates"
                        setSetting 1 /Settings/GuiMods/GitHubAutoUpdate
                    elif [ $response == 'd' ] || [ $response == 'D' ]; then 
                        logMessage "disabling automatic GitHub package updates"
                        setSetting 0 /Settings/GuiMods/GitHubAutoUpdate
                   fi
                fi
                ;;
            [pP]*)
                "$scriptDir/packageInstaller"
                fullPrompt=true
                ;;
            *)
        esac
    done
fi

if [ $scriptAction == 'INSTALL' ] ; then
    installService $packageName
fi

if [ $scriptAction == 'UNINSTALL' ] ; then
    removeService $packageName
fi

# thats all folks - SCRIPT EXITS INSIDE THE FUNCTION
endScript
